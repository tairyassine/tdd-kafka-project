spring:
  profiles:
    active: test
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    listener:
      missing-topics-fatal: false
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

app:
  kafka:
    retry:
      topic:
        main:
          timems: 0
          max: 0
        retry:
          timems: 0
          max: 0
    my-consumer:
      enabled: true
      topic:
        main: test_main_topic
        retry: test_retry_topic
        error: test_dlt_topic
        output: test_output_topic
      auto-offset-reset: latest
      bootstrap-servers: localhost:9092
      client-id: test-client-id
      group-id: test-group-id
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      max-poll-records: 5
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        deserializer-key-delegate-class: org.apache.kafka.common.serialization.StringDeserializer
        deserializer-value-delegate-class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        json-trusted-packages: '"*"'
        value-deserializer-specific-avro-reader: true
#       schema-registry:
#         url: http://localhost:${wiremock.server.port}/
  external-api:
    url: ${EXTERNAL_URL}

logging:
  level:
    root: info
    org:
      testcontainers: debug
